{"version":3,"sources":["contexts/EthContext/EthContext.js","contexts/EthContext/state.js","contexts/EthContext/EthProvider.jsx","contexts/EthContext/useEth.js","components/Header.jsx","components/FormRegisteringVoters.jsx","components/ProposalsRegistrationEnded.jsx","components/ProposalsRegistrationStarted.jsx","components/VotesTallied.jsx","components/VotingSessionEnded.jsx","components/VotingSessionStarted.jsx","components/Body.jsx","components/Footer.jsx","components/NoticeNoArtifact.jsx","components/NoticeWrongNetwork.jsx","components/Main.jsx","App.jsx","index.js"],"names":["EthContext","createContext","actions","initialState","artifact","web3","accounts","networkID","contract","reducer","state","action","type","data","Error","EthProvider","children","useReducer","dispatch","init","useCallback","Web3","givenProvider","eth","requestAccounts","net","getId","abi","address","networks","Contract","err","console","error","useEffect","tryInit","require","events","handleChange","forEach","e","window","ethereum","on","removeListener","Provider","value","useEth","useContext","Header","statusWorkflowNb","userStatus","style","backgroundColor","className","FormRegisteringVoters","voterAdresses","setVoterAdresses","useState","voterWallet","setVoterWallet","registerVoter","methods","addVoter","send","from","message","placeholder","onChange","target","onClick","map","voterAdress","ProposalsRegistrationEnded","proposals","proposal","ProposalsRegistrationStarted","setProposals","setProposal","registerProposal","addProposal","VotesTallied","winner","setWinner","getWinner","winningProposalID","call","parseInt","VotingSessionEnded","VotingSessionStarted","hasVoted","setHasVoted","votedProposalId","setVotedProposalId","getVoter","voter","addVote","id","setVote","index","Body","setstatusWorkflowNb","renderStep","setRenderStep","workflowStatus","goNextstatusWorkflowNb","nextStep","transac","WorkflowStatusChange","returnValues","newStatus","newstatusWorkflowNb","height","Footer","NoticeNoArtifact","NoticeWrongNetwork","Main","setUserStatus","owner","setOwner","getOwner","ownerAddress","getstatusWorkflowNb","getVotersAdresses","options","fromBlock","to","getPastEvents","event","voterAddress","voterAdressesArr","getProposals","then","r","toArray","k","getOneProposal","push","description","getUserStatus","indexOf","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4c424a1c.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst EthContext = createContext();\n\nexport default EthContext;\n","const actions = {\n  init: \"INIT\",\n};\n\nconst initialState = {\n  artifact: null,\n  web3: null,\n  accounts: null,\n  networkID: null,\n  contract: null\n};\n\nconst reducer = (state, action) => {\n  const { type, data } = action;\n  switch (type) {\n    case actions.init:\n      return { ...state, ...data };\n    default:\n      throw new Error(\"Undefined reducer action type\");\n  }\n};\n\nexport {\n  actions,\n  initialState,\n  reducer\n};\n","import React, { useReducer, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const init = useCallback(\n    async artifact => {\n      if (artifact) {\n        const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n        const accounts = await web3.eth.requestAccounts();\n        const networkID = await web3.eth.net.getId();\n        const { abi } = artifact;\n        let address, contract;\n        try {\n          address = artifact.networks[networkID].address;\n          contract = new web3.eth.Contract(abi, address);\n        } catch (err) {\n          console.error(err);\n        }\n        dispatch({\n          type: actions.init,\n          data: { artifact, web3, accounts, networkID, contract }\n        });\n      }\n    }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/Voting.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n\n  return (\n    <EthContext.Provider value={{\n      state,\n      dispatch\n    }}>\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n","import { useContext } from \"react\";\nimport EthContext from \"./EthContext\";\n\nconst useEth = () => useContext(EthContext);\n\nexport default useEth;\n","import useEth from \"../contexts/EthContext/useEth\";\r\n\r\nfunction Header({ statusWorkflowNb, userStatus }) {\r\n    const userStatusDisplay = {\r\n        'owner': 'Propriétaire',\r\n        'voter': 'Electeur',\r\n        'nonVoter': 'Non enregistré'\r\n    }\r\n    const { state: { accounts } } = useEth();\r\n    // const [voterAddress, setVoterAddress] = useState('');\r\n\r\n    return (\r\n        <header style= {{backgroundColor: '#2C3249'}}>\r\n            <div className=\" w-full flex justify-between items-center py-8 px-4\">\r\n                <div>\r\n                    <p>{userStatusDisplay[userStatus]}</p>\r\n                    <p>{accounts}</p>\r\n                </div>\r\n            </div>\r\n        </header >\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import { useState } from \"react\";\r\n\r\nfunction FormRegisteringVoters({ contract, accounts, userStatus, voterAdresses, setVoterAdresses }) {\r\n    const [voterWallet, setVoterWallet] = useState('');\r\n\r\n\r\n    const registerVoter = async () => {\r\n        try {\r\n            await contract.methods.addVoter(voterWallet).send({ from: accounts[0] });\r\n            setVoterAdresses([...voterAdresses, voterWallet])\r\n            setVoterWallet('');\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"pt-6\">\r\n            {userStatus === 'owner' ? (\r\n                <div className=\"w-full text-center\">\r\n                    <div className=\"mb-4\">\r\n                        <input type=\"text\" className=\"bg-transparent border border-purple-400 p-4 rounded-xl w-1/5\" placeholder=\"Saisir le wallet\" value={voterWallet} onChange={(e) => setVoterWallet(e.target.value)} />\r\n                        <div>\r\n                            <button className=\"bg-purple-400 px-4 py-3 rounded-xl w-1/5 mt-3 hover:bg-purple-600\" type=\"submit\" onClick={() => registerVoter()}>Enregistrer</button>\r\n                        </div>\r\n                    </div>\r\n                    <div>Liste des électeurs enregistré:</div>\r\n                    <div className=\"w-full text-center\">\r\n                        {voterAdresses.map(voterAdress => <div key={voterAdress}>{voterAdress}</div>)}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    Vous êtes correctement enregistré. En attente de l'ouverture des propositions\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormRegisteringVoters;","function ProposalsRegistrationEnded({ proposals, voterAdresses, userStatus }) {\r\n    return (\r\n        <>\r\n            {userStatus === 'owner' &&\r\n                <div className=\"w-full text-center\">\r\n                    <div>Liste des électeurs enregistrés:</div>\r\n                    <div>\r\n                        {voterAdresses.map(voterAdress => <div key={voterAdress}>{voterAdress}</div>)}\r\n                    </div>\r\n                </div>}\r\n            <div className=\"w-full text-center\">\r\n                <div>Liste des propositions enregistrés:</div>\r\n                <div>\r\n                    {proposals.map(proposal => <div key={proposal}>{proposal}</div>)}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProposalsRegistrationEnded;\r\n","import { useState } from \"react\";\r\n\r\nfunction ProposalsRegistrationStarted({ contract, accounts, userStatus, proposals, setProposals, voterAdresses }) {\r\n    const [proposal, setProposal] = useState('');\r\n\r\n    const registerProposal = async () => {\r\n        if (userStatus === 'voter') {\r\n            try {\r\n                await contract.methods.addProposal(proposal).send({ from: accounts[0] });\r\n                setProposals([...proposals, proposal])\r\n                setProposal('');\r\n            } catch (error) {\r\n                console.error(error.message);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"pt-6\">\r\n            {userStatus === 'voter' ? (\r\n                <div className=\"w-full text-center\">\r\n                    <div className=\"mb-4\">\r\n                        <input type=\"text\" className=\"bg-transparent border border-purple-400 p-4 rounded-xl w-1/5\" placeholder=\"Entrez votre proposition\" value={proposal} onChange={(e) => setProposal(e.target.value)} />\r\n                        <div>\r\n                            <button className=\"bg-purple-400 px-4 py-3 rounded-xl w-1/5 mt-3 hover:bg-purple-600\" type=\"submit\" onClick={() => registerProposal()}>Enregistrer</button>\r\n                        </div>\r\n                    </div>\r\n                    <div>Liste des propositions:</div>\r\n                    <div className=\"w-full text-center\">\r\n                        {proposals.map(proposal => <div key={proposal}>{proposal}</div>)}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    <div className=\"w-full text-center\">\r\n                        <div>Liste des électeurs enregistrés:</div>\r\n                        <div>\r\n                            {voterAdresses.map(voterAdress => <div key={voterAdress}>{voterAdress}</div>)}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"text-center\">Liste des propositions:</div>\r\n                        <div className=\"w-full text-center\">\r\n                            {proposals.map(proposal => <div key={proposal}>{proposal}</div>)}\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProposalsRegistrationStarted;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nfunction VotesTallied({ accounts, contract, proposals }) {\r\n    const [winner, setWinner] = useState(0)\r\n\r\n    const getWinner = async () => {\r\n        setWinner(await contract.methods.winningProposalID().call())\r\n    }\r\n\r\n    useEffect(() => {\r\n        getWinner()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\" w-full text-center\"> Le gagnant est la proposition <em>numero {parseInt(winner) + 1}</em> dont voici la description <em>{proposals[winner]}</em></div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default VotesTallied;\r\n","function VotingSessionEnded({ contract, accounts, voterAdresses, userStatus, proposals }) {\r\n    return (\r\n        <>\r\n            {userStatus === 'owner' &&\r\n                <div className=\"w-full text-center\">\r\n                    <div>Liste des électeurs enregistrés:</div>\r\n                    <div>\r\n                        {voterAdresses.map(voterAdress => <div key={voterAdress}>{voterAdress}</div>)}\r\n                    </div>\r\n                </div>}\r\n            <div className=\"w-full text-center\">\r\n                <div>Liste des propositions enregistrés:</div>\r\n                <div>\r\n                    {proposals.map(proposal => <div key={proposal}>{proposal}</div>)}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default VotingSessionEnded;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nfunction VotingSessionStarted({ contract, accounts, proposals, userStatus }) {\r\n\r\n    const [hasVoted, setHasVoted] = useState(false);\r\n    const [votedProposalId, setVotedProposalId] = useState(-1);\r\n\r\n    const getVoter = async () => {\r\n        if (userStatus === 'voter') {\r\n            const voter = await contract.methods.getVoter(accounts[0]).call({ from: accounts[0] });\r\n            setHasVoted(voter.hasVoted);\r\n            setVotedProposalId(voter.votedProposalId);\r\n        }\r\n    }\r\n\r\n    const addVote = async (id) => {\r\n        if (userStatus === 'voter') {\r\n            try {\r\n                await contract.methods.setVote(id).send({ from: accounts[0] });\r\n                getVoter()\r\n            } catch (error) {\r\n                console.error(error.message);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getVoter();\r\n    }, [accounts])\r\n\r\n    return (\r\n        <>\r\n\r\n            {userStatus === 'owner' ?\r\n                <div><div className=\"w-full text-center\">\r\n                    <div>Liste des propositions enregistrés:</div>\r\n                    <div>\r\n                        {proposals.map((proposal, index) => <div key={index}>{proposal}</div>)}\r\n                    </div>\r\n                </div></div>\r\n                : !hasVoted ?\r\n                    <div className=\"w-full text-center\">\r\n                        <div>Liste des propositions enregistrés. Vous pouvez en choisir une en cliquant sur l'icone.</div>\r\n                        <div>\r\n                            {proposals.map((proposal, index) => <div key={index}>{proposal}<button onClick={() => addVote(index)}>🗳️</button></div>)}\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className=\"w-full text-center\">\r\n                        <div>Liste des propositions enregistrés. Merci pour votre vote.</div>\r\n                        <div>\r\n                            {proposals.map((proposal, index) => <div key={index} className={`${index === parseInt(votedProposalId) ? \"text-blue-500\" : \"\"}`}>{proposal}</div>)}\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default VotingSessionStarted;\r\n","import { useEffect, useState } from \"react\";\r\nimport useEth from \"../contexts/EthContext/useEth\";\r\nimport FormRegisteringVoters from \"./FormRegisteringVoters\";\r\nimport ProposalsRegistrationEnded from \"./ProposalsRegistrationEnded\";\r\nimport ProposalsRegistrationStarted from \"./ProposalsRegistrationStarted\";\r\nimport VotesTallied from \"./VotesTallied\";\r\nimport VotingSessionEnded from \"./VotingSessionEnded\";\r\nimport VotingSessionStarted from \"./VotingSessionStarted\";\r\n\r\nfunction Body({ statusWorkflowNb, setstatusWorkflowNb, userStatus, voterAdresses, setVoterAdresses, proposals, setProposals }) {\r\n    const [renderStep, setRenderStep] = useState(<></>);\r\n    const { state: { contract, accounts } } = useEth();\r\n    const workflowStatus = {\r\n        0: 'RegisteringVoters',\r\n        1: 'startProposalsRegistering',\r\n        2: 'endProposalsRegistering',\r\n        3: 'startVotingSession',\r\n        4: 'endVotingSession',\r\n        5: 'tallyVotes'\r\n    }\r\n\r\n    const workflowStatusTraduction = {\r\n        0: 'Début de l\\'enregistrement des participants',\r\n        1: 'Début de l\\'enregistrement des propositions',\r\n        2: 'Fin de l\\'enregistrement des propositions',\r\n        3: 'Début des votes',\r\n        4: 'Fin des votes',\r\n        5: 'Nous avons un vainqueur !'\r\n    }\r\n\r\n    const goNextstatusWorkflowNb = async () => {\r\n        try {\r\n            const nextStep = parseInt(statusWorkflowNb) + 1;\r\n            const transac = await contract.methods[workflowStatus[nextStep]]().send({ from: accounts[0] });\r\n            const newstatusWorkflowNb = await transac.events.WorkflowStatusChange.returnValues.newStatus;\r\n            setstatusWorkflowNb(newstatusWorkflowNb)\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        switch (workflowStatus[statusWorkflowNb]) {\r\n            case 'RegisteringVoters':\r\n                setRenderStep(<FormRegisteringVoters contract={contract} accounts={accounts} userStatus={userStatus} voterAdresses={voterAdresses} setVoterAdresses={setVoterAdresses} />);\r\n                break;\r\n            case 'startProposalsRegistering':\r\n                setRenderStep(<ProposalsRegistrationStarted contract={contract} accounts={accounts} userStatus={userStatus} proposals={proposals} setProposals={setProposals} voterAdresses={voterAdresses} />);\r\n                break;\r\n            case 'endProposalsRegistering':\r\n                setRenderStep(<ProposalsRegistrationEnded proposals={proposals} voterAdresses={voterAdresses} userStatus={userStatus} />);\r\n                break;\r\n            case 'startVotingSession':\r\n                setRenderStep(<VotingSessionStarted contract={contract} accounts={accounts} proposals={proposals} userStatus={userStatus} />);\r\n                break;\r\n            case 'endVotingSession':\r\n                setRenderStep(<VotingSessionEnded contract={contract} accounts={accounts} voterAdresses={voterAdresses} proposals={proposals} userStatus={userStatus} />);\r\n                break;\r\n            case 'tallyVotes':\r\n                setRenderStep(<VotesTallied contract={contract} accounts={accounts} proposals={proposals} />);\r\n                break;\r\n            default:\r\n                setRenderStep(<div>Oops il semblerait que cette étape soit inconnue.</div>);\r\n                break;\r\n        }\r\n    }, [statusWorkflowNb, accounts, contract, userStatus, voterAdresses, proposals]);\r\n    return (\r\n        <main style={{ backgroundColor: '#15192C', height: '90vh' }} className=\" w-full\">\r\n            {userStatus === 'nonVoter' ? (\r\n                <div className=\"bg-black\">Désolé mais vous n'avez pas accès au vote</div>\r\n            ) : (\r\n                <div className=\"w-full\">\r\n                    <div className=\"text-5xl mb-16 text-center pt-6\" >{workflowStatusTraduction[statusWorkflowNb]}</div>\r\n                    {renderStep}\r\n                    {userStatus === 'owner' && workflowStatus[statusWorkflowNb] !== 'tallyVotes' ?\r\n                        <button className=\" text-2xl bg-green-600 py-6 px-16 rounded-xl cursor-pointer absolute right-8 bottom-8 \" type=\"button\" onClick={() => goNextstatusWorkflowNb(statusWorkflowNb)}>Next Step</button> : <></>}\r\n                </div>\r\n            )}\r\n\r\n        </main >\r\n    );\r\n}\r\n\r\nexport default Body;\r\n","function Footer() {\r\n  return (\r\n    <footer style= {{backgroundColor: '#2C3249'}}>\r\n      <div className=\" w-full text-center\"> Made with 💜 by Mathieu Gonon</div>\r\n    </footer >\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","function NoticeNoArtifact() {\n  return (\n    <p>\n      ⚠️ Cannot find <span className=\"code\">SimpleStorage</span> contract artifact.\n      Please complete the above preparation first, then restart the react dev server.\n    </p>\n  );\n}\n\nexport default NoticeNoArtifact;\n","function NoticeWrongNetwork() {\n  return (\n    <p>\n      ⚠️ MetaMask is not connected to the same network as the one you deployed to.\n    </p>\n  );\n}\n\nexport default NoticeWrongNetwork;\n","import { useEffect, useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Body from \"./Body\";\r\nimport Footer from \"./Footer\";\r\nimport useEth from \"../contexts/EthContext/useEth\";\r\nimport NoticeNoArtifact from \"./NoticeNoArtifact\";\r\nimport NoticeWrongNetwork from \"./NoticeWrongNetwork\";\r\n\r\nfunction Main() {\r\n    const { state: { contract, accounts } } = useEth();\r\n    const { state } = useEth();\r\n    const [statusWorkflowNb, setstatusWorkflowNb] = useState(0);\r\n    const [userStatus, setUserStatus] = useState('');\r\n    const [owner, setOwner] = useState(false);\r\n    const [proposals, setProposals] = useState([]);\r\n    const [voterAdresses, setVoterAdresses] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getOwner = async () => {\r\n            try {\r\n                const ownerAddress = await contract.methods.owner().call({ from: accounts[0] });\r\n                accounts[0] === ownerAddress ? setOwner(true) : setOwner(false)\r\n            } catch (error) {\r\n                console.error(error.message);\r\n            }\r\n        }\r\n\r\n        const getstatusWorkflowNb = async () => {\r\n            try {\r\n                setstatusWorkflowNb(await contract.methods.workflowStatus().call({ from: accounts[0] }))\r\n            } catch (error) {\r\n                console.error(error.message);\r\n            }\r\n        }\r\n\r\n        const getVotersAdresses = async () => {\r\n            let options = {\r\n                fromBlock: '0',\r\n                to: 'latest'\r\n            };\r\n            const events = await contract.getPastEvents('VoterRegistered', options)\r\n            const voterAdressesArr = await events.map(event => event.returnValues.voterAddress)\r\n            setVoterAdresses(voterAdressesArr)\r\n        };\r\n\r\n        const getProposals = async () => {\r\n\r\n            let options = {\r\n                fromBlock: '0',\r\n                to: 'latest'\r\n            };\r\n            try {\r\n                await contract.getPastEvents('ProposalRegistered', options).then(\r\n                    async (r) => {\r\n                        let toArray = [];\r\n                        for (const k in r) {\r\n                            let id = r[k].returnValues[0];\r\n                            await contract.methods.getOneProposal(id).call({ from: accounts[0] }).then((r) => {\r\n                                toArray.push(r.description);\r\n                            });\r\n                        }\r\n                        setProposals(toArray);\r\n                    }\r\n                );\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        const getUserStatus = async () => {\r\n            if (owner) return setUserStatus('owner')\r\n            voterAdresses.indexOf(accounts[0]) !== -1 ? setUserStatus('voter') : setUserStatus('nonVoter')\r\n        }\r\n\r\n        if (contract) {\r\n            getOwner();\r\n            getstatusWorkflowNb();\r\n            getVotersAdresses();\r\n            getUserStatus();\r\n            getProposals();\r\n        }\r\n    }, [statusWorkflowNb, owner, accounts, contract]);\r\n\r\n    return (\r\n        <div className=\"text-xl bg-black h-screen\" >\r\n            <Header statusWorkflowNb={statusWorkflowNb} userStatus={userStatus} />\r\n            <>\r\n                {\r\n                    !state.artifact ? <NoticeNoArtifact /> :\r\n                        !state.contract ? <NoticeWrongNetwork /> :\r\n                            userStatus === 'nonVoter' ? <div className=\"bg-black\">Désolé mais vous n'avez pas accès au vote</div> : <Body statusWorkflowNb={statusWorkflowNb} setstatusWorkflowNb={setstatusWorkflowNb} userStatus={userStatus} voterAdresses={voterAdresses} setVoterAdresses={setVoterAdresses} proposals={proposals} setProposals={setProposals} />\r\n\r\n                }\r\n            </>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import { EthProvider } from \"./contexts/EthContext\";\r\nimport './index.css';\r\nimport './App.css';\r\nimport Main from \"./components/Main\";\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <EthProvider>\r\n      <div id=\"App\" className=\"text-white h-screen\">\r\n        <Main />\r\n      </div>\r\n    </EthProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}